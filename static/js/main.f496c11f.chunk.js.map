{"version":3,"sources":["components/FormDatePickersContainer.js","components/FormGuestsNumberContainer.js","components/FormComponent.js","components/RoomOnListComponent.js","components/RoomsListComponent.js","components/ListContainer.js","utilities/fetchFunctions.js","App.js","serviceWorker.js","index.js"],"names":["FormDatePickersContainer","props","handleChangeDateFrom","handleChangeDateTo","dateFrom","dateTo","react_default","a","createElement","className","material_ui_pickers_esm","autoOk","label","disablePast","value","onChange","date","margin","variant","inputVariant","initialFocusedDate","FormGuestsNumberContainer","adultsNumber","childrenNumber","handleChange","TextField","id","type","InputLabelProps","shrink","inputProps","min","FormComponent","handleChangeVisitors","visitors","utils","DateFnsUtils","components_FormDatePickersContainer","components_FormGuestsNumberContainer","RoomOnListComponent","_ref","roomData","name","roomType","maxNbGuests","totalPrice","bedroomsCount","singleBedsCount","doubleBedsCount","image","Card","CardHeader","title","CardMedia","component","CardContent","Typography","RoomsListComponent","roomsData","List","map","room","ListItem","key","components_RoomOnListComponent","ListContainer","isLoading","error","CircularProgress","toString","components_RoomsListComponent","fetchRoomsData","fetchParams","callback","url","concat","format","getUrlFromFetchParams","jsonp","timeout","data","App","_useState","useState","_useState2","Object","slicedToArray","setVisitors","_useState3","Date","_useState4","setDateFrom","_useState5","_useState6","setDateTo","_useState7","_useState8","setRoomsData","_useState9","_useState10","setError","_useState11","_useState12","setIsLoading","handleSearch","Paper","components_FormComponent","event","objectSpread","defineProperty","target","CardActions","disableSpacing","Button","onClick","components_ListContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f496c11f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { DatePicker } from '@material-ui/pickers';\r\n\r\nconst FormDatePickersContainer = (props) => {\r\n  const {\r\n    handleChangeDateFrom,\r\n    handleChangeDateTo,\r\n    dateFrom,\r\n    dateTo\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"form--date__container\">\r\n      <div className=\"form--date__from\">\r\n        <DatePicker\r\n          autoOk\r\n          label=\"Date From\"\r\n          disablePast\r\n          value={dateFrom}\r\n          onChange={date => handleChangeDateFrom(date)}\r\n          margin=\"normal\"\r\n          variant=\"inline\"\r\n          inputVariant=\"outlined\"\r\n        />\r\n      </div>\r\n      <div className=\"form--date form--date__to\">\r\n        <DatePicker\r\n          autoOk\r\n          label=\"Date To\"\r\n          initialFocusedDate={dateFrom}\r\n          disablePast\r\n          value={dateTo}\r\n          onChange={date => handleChangeDateTo(date)}\r\n          margin=\"normal\"\r\n          variant=\"inline\"\r\n          inputVariant=\"outlined\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormDatePickersContainer;\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport { TextField } from '@material-ui/core';\r\n\r\nconst FormGuestsNumberContainer = (props) => {\r\n  const {\r\n    adultsNumber,\r\n    childrenNumber,\r\n    handleChange\r\n  } = props;\r\n  return (\r\n    <div className=\"form--guests__container\">\r\n      <div className=\"form--guests form--guests__adults\">\r\n        <TextField\r\n          id=\"adultsNumber\"\r\n          label=\"Adults\"\r\n          value={adultsNumber}\r\n          onChange={handleChange('adultsNumber')}\r\n          type=\"number\"\r\n          className=\"input__number\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          inputProps={{\r\n            min: 1\r\n          }}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n        />\r\n      </div>\r\n      <div className=\"form--guests form--guests__children\">\r\n        <TextField\r\n          id=\"childrenNumber\"\r\n          label=\"Children\"\r\n          value={childrenNumber}\r\n          onChange={handleChange('childrenNumber')}\r\n          type=\"number\"\r\n          className=\"input__number\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          inputProps={{\r\n            min: 0\r\n          }}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormGuestsNumberContainer;\r\n","import React from 'react';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\n\r\nimport FormDatePickersContainer from './FormDatePickersContainer';\r\nimport FormGuestsNumberContainer from './FormGuestsNumberContainer';\r\n\r\nconst FormComponent = (props) => {\r\n  const {\r\n    handleChangeDateFrom,\r\n    handleChangeDateTo,\r\n    handleChangeVisitors,\r\n    dateFrom,\r\n    dateTo,\r\n    visitors\r\n  } = props;\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n      <FormDatePickersContainer\r\n        handleChangeDateFrom={handleChangeDateFrom}\r\n        handleChangeDateTo={handleChangeDateTo}\r\n        dateFrom={dateFrom}\r\n        dateTo={dateTo}\r\n      />\r\n      <FormGuestsNumberContainer\r\n        handleChange={handleChangeVisitors}\r\n        adultsNumber={visitors.adultsNumber}\r\n        childrenNumber={visitors.childrenNumber}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  )\r\n}\r\n\r\nexport default FormComponent;\r\n","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst RoomOnListComponent = ({ roomData }) => {\r\n\r\n  const {\r\n    name,\r\n    roomType,\r\n    maxNbGuests,\r\n    totalPrice,\r\n    bedroomsCount,\r\n    singleBedsCount,\r\n    doubleBedsCount,\r\n    image\r\n\r\n\r\n  } = roomData;\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title={name} />\r\n      <CardMedia component='img' image={image} title={name} />\r\n      <CardContent>\r\n        <Typography variant=\"subtitle1\">{roomType}</Typography>\r\n        <Typography variant=\"subtitle1\">Maksymalna ilość gości {maxNbGuests}</Typography>\r\n        <Typography variant=\"subtitle1\">Cena: {totalPrice}</Typography>\r\n        <Typography variant=\"subtitle1\">Ilość sypialeń {bedroomsCount}</Typography>\r\n        <Typography variant=\"subtitle1\" >Łóżka pojedyńcze {singleBedsCount}</Typography>\r\n        <Typography variant=\"subtitle1\" >Łóżka podwójne {doubleBedsCount}</Typography>\r\n      </CardContent>\r\n\r\n\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default RoomOnListComponent;\r\n","import React from 'react';\r\nimport RoomOnListComponent from './RoomOnListComponent';\r\nimport {\r\n  List,\r\n  ListItem\r\n} from '@material-ui/core';\r\n\r\nconst RoomsListComponent = ({ roomsData }) => {\r\n\r\n  return (\r\n    <List>\r\n      {roomsData.map(\r\n        (room) => {\r\n          return (\r\n            <ListItem key={room.id}>\r\n              <RoomOnListComponent roomData={room} />\r\n            </ListItem>\r\n          )\r\n        }\r\n      )}\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default RoomsListComponent;\r\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport RoomsListComponent from './RoomsListComponent'\r\n\r\nconst ListContainer = (props) => {\r\n  const { isLoading, error, roomsData } = props;\r\n  return (\r\n    <div>\r\n      {isLoading ? <CircularProgress /> : null}\r\n      {error ? <h2>{error.toString()}</h2> : null}\r\n      {roomsData ? <RoomsListComponent roomsData={roomsData} /> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListContainer;\r\n\r\n\r\n","import jsonp from 'jsonp';\r\nimport { format } from 'date-fns';\r\n\r\nfunction getUrlFromFetchParams(fetchParams) {\r\n\r\n  let url = ``;\r\n  const baseUrl = `http://testapi.itur.pl/api.php`;\r\n  const dateFrom = `date_from=${format(fetchParams.dateFrom, 'yyyy-MM-dd')}`;\r\n  const dateTo = `date_to=${format(fetchParams.dateTo, 'yyyy-MM-dd')}`;\r\n  const adultsNumber = `nb_adults=${fetchParams.visitors.adultsNumber}`;\r\n  const childrenNumber = `nb_children=${fetchParams.visitors.childrenNumber}`;\r\n  url = `${baseUrl}?${dateFrom}&${dateTo}&${adultsNumber}&${childrenNumber}`;\r\n\r\n  return url;\r\n}\r\n\r\nexport default function fetchRoomsData(fetchParams, callback) {\r\n  const url = getUrlFromFetchParams(fetchParams);\r\n  jsonp(\r\n    url,\r\n    { timeout: 6000 },\r\n    (error, data) => callback(error, data)\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Typography,\r\n  Paper\r\n} from '@material-ui/core';\r\n\r\nimport './App.css';\r\nimport FormComponent from './components/FormComponent';\r\nimport ListContainer from './components/ListContainer';\r\n\r\nimport fetchRoomsData from './utilities/fetchFunctions';\r\n\r\nconst App = () => {\r\n\r\n  const [visitors, setVisitors] = useState({\r\n    adultsNumber: 1,\r\n    childrenNumber: 0\r\n  });\r\n  const [dateFrom, setDateFrom] = useState(new Date());\r\n  const [dateTo, setDateTo] = useState(new Date());\r\n  const [roomsData, setRoomsData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleChangeVisitors = name => event => {\r\n    setVisitors({ ...visitors, [name]: event.target.value });\r\n    handleSearch();\r\n  };\r\n  const handleChangeDateFrom = date => {\r\n    setDateFrom(date);\r\n    if (date > dateTo) { setDateTo(date) };\r\n    handleSearch();\r\n  }\r\n  const handleChangeDateTo = date => {\r\n    setDateTo(date);\r\n    if (date < dateFrom) { setDateFrom(date) };\r\n    handleSearch();\r\n  }\r\n  const handleSearch = () => {\r\n    setRoomsData(null);\r\n    setIsLoading(true);\r\n    fetchRoomsData(\r\n      {\r\n        dateFrom: dateFrom,\r\n        dateTo: dateTo,\r\n        visitors: visitors\r\n      },\r\n      (error, roomsData) => {\r\n        setRoomsData(roomsData);\r\n        setError(error);\r\n        setIsLoading(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper className=\"App\">\r\n      <Card>\r\n        <CardContent>\r\n          <Typography component=\"h4\">\r\n            Please choose dates and guest's information to see prices:\r\n          </Typography>\r\n          <FormComponent\r\n            dateFrom={dateFrom}\r\n            dateTo={dateTo}\r\n            visitors={visitors}\r\n            handleChangeVisitors={handleChangeVisitors}\r\n            handleChangeDateFrom={handleChangeDateFrom}\r\n            handleChangeDateTo={handleChangeDateTo} />\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <Button variant=\"outlined\" onClick={handleSearch}>Search</Button>\r\n        </CardActions>\r\n      </Card>\r\n      <ListContainer\r\n        roomsData={roomsData}\r\n        error={error}\r\n        isLoading={isLoading}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}